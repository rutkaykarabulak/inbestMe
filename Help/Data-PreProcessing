{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 414,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>İsim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ada</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cem</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sibel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ahmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mehmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>None</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Ali</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>None</td>\n",
       "      <td>73</td>\n",
       "      <td>None</td>\n",
       "      <td>35</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Veli</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Ayşe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hüseyin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>None</td>\n",
       "      <td>92</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Necmi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nalan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Namık</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş  ÇocukSayısı     İsim\n",
       "0        işçi    89  11.11.2010   21          NaN      Ada\n",
       "1        işçi    87  11.11.2010   24          NaN      Cem\n",
       "2       memur    77  11.11.2010   25          NaN    Sibel\n",
       "3     serbest    55  18.11.2011   44          NaN    Ahmet\n",
       "4     serbest    70  18.11.2011   31          NaN   Mehmet\n",
       "5        None    79        None   27          1.0      Ali\n",
       "6        None    73        None   35          2.0     Veli\n",
       "7   sigortacı    79        None   33          0.0     Ayşe\n",
       "8       işsiz    54  11.11.2010   42          NaN  Hüseyin\n",
       "9        None    92        None   29          NaN    Necmi\n",
       "10       None    61  18.11.2011   41          NaN    Nalan\n",
       "11      memur    69  18.11.2011   43          NaN    Namık"
      ]
     },
     "execution_count": 414,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    " \n",
    "\n",
    "sozluk = {'İsim':pd.Series(['Ada','Cem','Sibel','Ahmet','Mehmet','Ali','Veli',\n",
    "          'Ayşe','Hüseyin','Necmi','Nalan','Namık']),\n",
    "          'Meslek':pd.Series(['işçi','işçi','memur','serbest','serbest',None,None,\n",
    "          'sigortacı','işsiz',None,None,'memur']),\n",
    "          'Tarih':pd.Series(['11.11.2010','11.11.2010','11.11.2010','18.11.2011','18.11.2011',None,None,\n",
    "          None,'11.11.2010',None,'18.11.2011','18.11.2011']),          \n",
    "          'Yaş':pd.Series([21, 24, 25, 44, 31, 27, 35, 33, 42, 29, 41, 43]),\n",
    "          'ÇocukSayısı':pd.Series([None, None, None, None, None, 1, 2, 0, None, None, None, None]),\n",
    "          'Puan':pd.Series([89, 87, 77, 55, 70, 79, 73, 79, 54, 92, 61, 69])}\n",
    " \n",
    "df = pd.DataFrame(sozluk)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#BÖLÜM 1: PANDAS DATAFRAME "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 415,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>İsim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ada</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cem</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sibel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ahmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mehmet</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Meslek  Puan       Tarih  Yaş  ÇocukSayısı    İsim\n",
       "0     işçi    89  11.11.2010   21          NaN     Ada\n",
       "1     işçi    87  11.11.2010   24          NaN     Cem\n",
       "2    memur    77  11.11.2010   25          NaN   Sibel\n",
       "3  serbest    55  18.11.2011   44          NaN   Ahmet\n",
       "4  serbest    70  18.11.2011   31          NaN  Mehmet"
      ]
     },
     "execution_count": 415,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head() #ilk 5 satır"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 416,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>İsim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Ayşe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hüseyin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>None</td>\n",
       "      <td>92</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Necmi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nalan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Namık</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş  ÇocukSayısı     İsim\n",
       "7   sigortacı    79        None   33          0.0     Ayşe\n",
       "8       işsiz    54  11.11.2010   42          NaN  Hüseyin\n",
       "9        None    92        None   29          NaN    Necmi\n",
       "10       None    61  18.11.2011   41          NaN    Nalan\n",
       "11      memur    69  18.11.2011   43          NaN    Namık"
      ]
     },
     "execution_count": 416,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail() #son 5 satır       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 418,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>İsim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nalan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cem</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ahmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>None</td>\n",
       "      <td>92</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Necmi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hüseyin</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Meslek  Puan       Tarih  Yaş  ÇocukSayısı     İsim\n",
       "10     None    61  18.11.2011   41          NaN    Nalan\n",
       "1      işçi    87  11.11.2010   24          NaN      Cem\n",
       "3   serbest    55  18.11.2011   44          NaN    Ahmet\n",
       "9      None    92        None   29          NaN    Necmi\n",
       "8     işsiz    54  11.11.2010   42          NaN  Hüseyin"
      ]
     },
     "execution_count": 418,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5) #rassal 5 satır"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 419,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(12, 6)"
      ]
     },
     "execution_count": 419,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape #satır ve sütun sayısı"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 420,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 12 entries, 0 to 11\n",
      "Data columns (total 6 columns):\n",
      "Meslek         8 non-null object\n",
      "Puan           12 non-null int64\n",
      "Tarih          8 non-null object\n",
      "Yaş            12 non-null int64\n",
      "ÇocukSayısı    3 non-null float64\n",
      "İsim           12 non-null object\n",
      "dtypes: float64(1), int64(2), object(3)\n",
      "memory usage: 656.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "df.info() #bellek kullanımı ve veri türleri"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 421,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Puan</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>12.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>73.750000</td>\n",
       "      <td>32.916667</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>12.606816</td>\n",
       "      <td>8.061788</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>54.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>67.000000</td>\n",
       "      <td>26.500000</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>75.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>81.000000</td>\n",
       "      <td>41.250000</td>\n",
       "      <td>1.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>92.000000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Puan        Yaş  ÇocukSayısı\n",
       "count  12.000000  12.000000          3.0\n",
       "mean   73.750000  32.916667          1.0\n",
       "std    12.606816   8.061788          1.0\n",
       "min    54.000000  21.000000          0.0\n",
       "25%    67.000000  26.500000          0.5\n",
       "50%    75.000000  32.000000          1.0\n",
       "75%    81.000000  41.250000          1.5\n",
       "max    92.000000  44.000000          2.0"
      ]
     },
     "execution_count": 421,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe() #basit istatistikler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 422,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     21\n",
       "1     24\n",
       "2     25\n",
       "3     44\n",
       "4     31\n",
       "5     27\n",
       "6     35\n",
       "7     33\n",
       "8     42\n",
       "9     29\n",
       "10    41\n",
       "11    43\n",
       "Name: Yaş, dtype: int64"
      ]
     },
     "execution_count": 422,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Yaş'] #kolon seç"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 423,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        Ada\n",
       "1        Cem\n",
       "2      Sibel\n",
       "3      Ahmet\n",
       "4     Mehmet\n",
       "5        Ali\n",
       "6       Veli\n",
       "7       Ayşe\n",
       "8    Hüseyin\n",
       "9      Necmi\n",
       "Name: İsim, dtype: object"
      ]
     },
     "execution_count": 423,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['İsim'][:10] #İsim kolonundaki ilk 10 satırı seç"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 424,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Yaş</th>\n",
       "      <th>İsim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>21</td>\n",
       "      <td>Ada</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>24</td>\n",
       "      <td>Cem</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>25</td>\n",
       "      <td>Sibel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>44</td>\n",
       "      <td>Ahmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>31</td>\n",
       "      <td>Mehmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>27</td>\n",
       "      <td>Ali</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>35</td>\n",
       "      <td>Veli</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>33</td>\n",
       "      <td>Ayşe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>42</td>\n",
       "      <td>Hüseyin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>29</td>\n",
       "      <td>Necmi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>41</td>\n",
       "      <td>Nalan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>43</td>\n",
       "      <td>Namık</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Yaş     İsim\n",
       "0    21      Ada\n",
       "1    24      Cem\n",
       "2    25    Sibel\n",
       "3    44    Ahmet\n",
       "4    31   Mehmet\n",
       "5    27      Ali\n",
       "6    35     Veli\n",
       "7    33     Ayşe\n",
       "8    42  Hüseyin\n",
       "9    29    Necmi\n",
       "10   41    Nalan\n",
       "11   43    Namık"
      ]
     },
     "execution_count": 424,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[['Yaş', 'İsim']]  #Birden fazla kolon seç"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 425,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>İsim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ahmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mehmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>None</td>\n",
       "      <td>73</td>\n",
       "      <td>None</td>\n",
       "      <td>35</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Veli</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Ayşe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hüseyin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nalan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Namık</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş  ÇocukSayısı     İsim\n",
       "3     serbest    55  18.11.2011   44          NaN    Ahmet\n",
       "4     serbest    70  18.11.2011   31          NaN   Mehmet\n",
       "6        None    73        None   35          2.0     Veli\n",
       "7   sigortacı    79        None   33          0.0     Ayşe\n",
       "8       işsiz    54  11.11.2010   42          NaN  Hüseyin\n",
       "10       None    61  18.11.2011   41          NaN    Nalan\n",
       "11      memur    69  18.11.2011   43          NaN    Namık"
      ]
     },
     "execution_count": 425,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[(df['Yaş']>30) & (df['Puan']>50)]  #30 yaşından büyük olup 50 puandan yüksek alanları seç"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 426,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>İsim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>None</td>\n",
       "      <td>92</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Necmi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ada</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cem</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>None</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Ali</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Ayşe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sibel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>None</td>\n",
       "      <td>73</td>\n",
       "      <td>None</td>\n",
       "      <td>35</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Veli</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mehmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Namık</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nalan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ahmet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hüseyin</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş  ÇocukSayısı     İsim\n",
       "9        None    92        None   29          NaN    Necmi\n",
       "0        işçi    89  11.11.2010   21          NaN      Ada\n",
       "1        işçi    87  11.11.2010   24          NaN      Cem\n",
       "5        None    79        None   27          1.0      Ali\n",
       "7   sigortacı    79        None   33          0.0     Ayşe\n",
       "2       memur    77  11.11.2010   25          NaN    Sibel\n",
       "6        None    73        None   35          2.0     Veli\n",
       "4     serbest    70  18.11.2011   31          NaN   Mehmet\n",
       "11      memur    69  18.11.2011   43          NaN    Namık\n",
       "10       None    61  18.11.2011   41          NaN    Nalan\n",
       "3     serbest    55  18.11.2011   44          NaN    Ahmet\n",
       "8       işsiz    54  11.11.2010   42          NaN  Hüseyin"
      ]
     },
     "execution_count": 426,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sort_values('Puan', axis = 0, ascending = False) # Sıralama"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df[(df['Yaş']>30) & (df['Puan']>50)].sort_values('Puan', axis=0, ascending=False)  #Filtreleme ve Sıralama birlikte"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 427,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>İsim</th>\n",
       "      <th>Geçti</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ada</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cem</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sibel</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ahmet</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mehmet</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>None</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Ali</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>None</td>\n",
       "      <td>73</td>\n",
       "      <td>None</td>\n",
       "      <td>35</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Veli</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Ayşe</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hüseyin</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>None</td>\n",
       "      <td>92</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Necmi</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nalan</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Namık</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş  ÇocukSayısı     İsim  Geçti\n",
       "0        işçi    89  11.11.2010   21          NaN      Ada   True\n",
       "1        işçi    87  11.11.2010   24          NaN      Cem   True\n",
       "2       memur    77  11.11.2010   25          NaN    Sibel   True\n",
       "3     serbest    55  18.11.2011   44          NaN    Ahmet  False\n",
       "4     serbest    70  18.11.2011   31          NaN   Mehmet   True\n",
       "5        None    79        None   27          1.0      Ali   True\n",
       "6        None    73        None   35          2.0     Veli   True\n",
       "7   sigortacı    79        None   33          0.0     Ayşe   True\n",
       "8       işsiz    54  11.11.2010   42          NaN  Hüseyin  False\n",
       "9        None    92        None   29          NaN    Necmi   True\n",
       "10       None    61  18.11.2011   41          NaN    Nalan  False\n",
       "11      memur    69  18.11.2011   43          NaN    Namık  False"
      ]
     },
     "execution_count": 427,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Apply fonksiyonu kullanarak sınavdan geçip geçmediğini yeni kolon olarak ekle\n",
    "def basari_durumu(puan):\n",
    "    return (puan >= 70)\n",
    "\n",
    "df['Geçti'] = df['Puan'].apply(basari_durumu)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 429,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>İsim</th>\n",
       "      <th>Geçti</th>\n",
       "      <th>Yıl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ada</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cem</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sibel</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ahmet</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mehmet</td>\n",
       "      <td>True</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>None</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Ali</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>None</td>\n",
       "      <td>73</td>\n",
       "      <td>None</td>\n",
       "      <td>35</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Veli</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Ayşe</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hüseyin</td>\n",
       "      <td>False</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>None</td>\n",
       "      <td>92</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Necmi</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nalan</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Namık</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş  ÇocukSayısı     İsim  Geçti     Yıl\n",
       "0        işçi    89  11.11.2010   21          NaN      Ada   True  2010.0\n",
       "1        işçi    87  11.11.2010   24          NaN      Cem   True  2010.0\n",
       "2       memur    77  11.11.2010   25          NaN    Sibel   True  2010.0\n",
       "3     serbest    55  18.11.2011   44          NaN    Ahmet  False  2011.0\n",
       "4     serbest    70  18.11.2011   31          NaN   Mehmet   True  2011.0\n",
       "5        None    79        None   27          1.0      Ali   True     NaN\n",
       "6        None    73        None   35          2.0     Veli   True     NaN\n",
       "7   sigortacı    79        None   33          0.0     Ayşe   True     NaN\n",
       "8       işsiz    54  11.11.2010   42          NaN  Hüseyin  False  2010.0\n",
       "9        None    92        None   29          NaN    Necmi   True     NaN\n",
       "10       None    61  18.11.2011   41          NaN    Nalan  False  2011.0\n",
       "11      memur    69  18.11.2011   43          NaN    Namık  False  2011.0"
      ]
     },
     "execution_count": 429,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Tarih alanındaki yıl bilgisini kullanarak 'Yıl' isimli yeni bir öznitelik oluşturuyoruz\n",
    "tarih = pd.to_datetime(df['Tarih'])\n",
    "df['Yıl'] = tarih.dt.year\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 431,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Meslek\n",
       "işsiz        1\n",
       "işçi         2\n",
       "memur        2\n",
       "serbest      2\n",
       "sigortacı    1\n",
       "Name: Puan, dtype: int64"
      ]
     },
     "execution_count": 431,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Groupby kullanımı, meslek bazında puan sayıları\n",
    "df.groupby('Meslek')['Puan'].apply(lambda x: x.count())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 432,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Meslek\n",
       "işsiz        54.0\n",
       "işçi         88.0\n",
       "memur        73.0\n",
       "serbest      62.5\n",
       "sigortacı    79.0\n",
       "Name: Puan, dtype: float64"
      ]
     },
     "execution_count": 432,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Groupby kullanımı, meslek bazında ortalamaları\n",
    "df.groupby('Meslek')['Puan'].apply(lambda x: np.mean(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 433,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "73.75"
      ]
     },
     "execution_count": 433,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#BÖLÜM 2: BASİT İSTATİSTİK\n",
    "\n",
    "#Puan özniteliğinin ortalaması\n",
    "df['Puan'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 434,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Puan             73.750000\n",
       "Yaş              32.916667\n",
       "ÇocukSayısı       1.000000\n",
       "Geçti             0.666667\n",
       "Yıl            2010.500000\n",
       "dtype: float64"
      ]
     },
     "execution_count": 434,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sayısal tüm özniteliklerin ortalaması\n",
    "df.mean(axis=0,skipna=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 435,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "75.0"
      ]
     },
     "execution_count": 435,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Puan özniteliğinin medyanı\n",
    "df['Puan'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 438,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    79\n",
       "dtype: int64"
      ]
     },
     "execution_count": 438,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Puan özniteliğinin modu\n",
    "df['Puan'].mode()\n",
    "\n",
    "#Yaş özniteliğinin modu\n",
    "#df['Yaş'].mode()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 439,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12.606816338069583"
      ]
     },
     "execution_count": 439,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Puan özniteliğinin standart sapması\n",
    "df['Puan'].std()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 440,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Puan</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>Geçti</th>\n",
       "      <th>Yıl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Puan</th>\n",
       "      <td>158.931818</td>\n",
       "      <td>-87.295455</td>\n",
       "      <td>-3.0</td>\n",
       "      <td>5.090909</td>\n",
       "      <td>-3.714286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yaş</th>\n",
       "      <td>-87.295455</td>\n",
       "      <td>64.992424</td>\n",
       "      <td>1.0</td>\n",
       "      <td>-3.484848</td>\n",
       "      <td>3.357143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <td>-3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Geçti</th>\n",
       "      <td>5.090909</td>\n",
       "      <td>-3.484848</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.242424</td>\n",
       "      <td>-0.142857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yıl</th>\n",
       "      <td>-3.714286</td>\n",
       "      <td>3.357143</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Puan        Yaş  ÇocukSayısı     Geçti       Yıl\n",
       "Puan         158.931818 -87.295455         -3.0  5.090909 -3.714286\n",
       "Yaş          -87.295455  64.992424          1.0 -3.484848  3.357143\n",
       "ÇocukSayısı   -3.000000   1.000000          1.0  0.000000       NaN\n",
       "Geçti          5.090909  -3.484848          0.0  0.242424 -0.142857\n",
       "Yıl           -3.714286   3.357143          NaN -0.142857  0.285714"
      ]
     },
     "execution_count": 440,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Kovaryans matrisi hesapla\n",
    "df.cov()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 444,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Puan</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <th>Geçti</th>\n",
       "      <th>Yıl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Puan</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.858924</td>\n",
       "      <td>-0.866025</td>\n",
       "      <td>0.820166</td>\n",
       "      <td>-0.517624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yaş</th>\n",
       "      <td>-0.858924</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.240192</td>\n",
       "      <td>-0.877939</td>\n",
       "      <td>0.650336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <td>-0.866025</td>\n",
       "      <td>0.240192</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Geçti</th>\n",
       "      <td>0.820166</td>\n",
       "      <td>-0.877939</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yıl</th>\n",
       "      <td>-0.517624</td>\n",
       "      <td>0.650336</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.500000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Puan       Yaş  ÇocukSayısı     Geçti       Yıl\n",
       "Puan         1.000000 -0.858924    -0.866025  0.820166 -0.517624\n",
       "Yaş         -0.858924  1.000000     0.240192 -0.877939  0.650336\n",
       "ÇocukSayısı -0.866025  0.240192     1.000000       NaN       NaN\n",
       "Geçti        0.820166 -0.877939          NaN  1.000000 -0.500000\n",
       "Yıl         -0.517624  0.650336          NaN -0.500000  1.000000"
      ]
     },
     "execution_count": 444,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Kovaryans matrisi hesapla\n",
    "df.corr()\n",
    "#df.plot(x='Puan', y='Yaş', style='o')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 443,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x11feac5c0>"
      ]
     },
     "execution_count": 443,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11febf240>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Korelasyon Gösterim\n",
    "import seaborn as sns\n",
    "corr = df.corr()\n",
    "sns.heatmap(corr, \n",
    "            xticklabels=corr.columns.values,\n",
    "            yticklabels=corr.columns.values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 445,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Meslek         4\n",
       "Puan           0\n",
       "Tarih          4\n",
       "Yaş            0\n",
       "ÇocukSayısı    9\n",
       "İsim           0\n",
       "Geçti          0\n",
       "Yıl            4\n",
       "dtype: int64"
      ]
     },
     "execution_count": 445,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#BÖLÜM 3: ÖN İŞLEME\n",
    "\n",
    "#1.Eksik Değer Doldurma\n",
    "#Null olan öznitelikleri buluyoruz\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 446,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 446,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Null olan özniteliklere sahip, toplam kayıt sayısını buluyoruz\n",
    "df.isnull().sum().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 447,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Eksik değer tablosu\n",
    "def eksik_deger_tablosu(df): \n",
    "    mis_val = df.isnull().sum()\n",
    "    mis_val_percent = 100 * df.isnull().sum()/len(df)\n",
    "    mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n",
    "    mis_val_table_ren_columns = mis_val_table.rename(\n",
    "    columns = {0 : 'Eksik Değerler', 1 : '% Değeri'})\n",
    "    return mis_val_table_ren_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 448,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Eksik Değerler</th>\n",
       "      <th>% Değeri</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Meslek</th>\n",
       "      <td>4</td>\n",
       "      <td>33.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Puan</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tarih</th>\n",
       "      <td>4</td>\n",
       "      <td>33.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yaş</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ÇocukSayısı</th>\n",
       "      <td>9</td>\n",
       "      <td>75.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>İsim</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Geçti</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yıl</th>\n",
       "      <td>4</td>\n",
       "      <td>33.333333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Eksik Değerler   % Değeri\n",
       "Meslek                    4  33.333333\n",
       "Puan                      0   0.000000\n",
       "Tarih                     4  33.333333\n",
       "Yaş                       0   0.000000\n",
       "ÇocukSayısı               9  75.000000\n",
       "İsim                      0   0.000000\n",
       "Geçti                     0   0.000000\n",
       "Yıl                       4  33.333333"
      ]
     },
     "execution_count": 448,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eksik_deger_tablosu(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 449,
   "metadata": {},
   "outputs": [],
   "source": [
    "#%70 üzerinde null değer içeren kolonları sil\n",
    "tr = len(df) * .3\n",
    "df.dropna(thresh = tr, axis = 1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 450,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>İsim</th>\n",
       "      <th>Geçti</th>\n",
       "      <th>Yıl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>Ada</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>Cem</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>Sibel</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>Ahmet</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>Mehmet</td>\n",
       "      <td>True</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>None</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>27</td>\n",
       "      <td>Ali</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>None</td>\n",
       "      <td>73</td>\n",
       "      <td>None</td>\n",
       "      <td>35</td>\n",
       "      <td>Veli</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>33</td>\n",
       "      <td>Ayşe</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>Hüseyin</td>\n",
       "      <td>False</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>None</td>\n",
       "      <td>92</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>Necmi</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>None</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>Nalan</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>Namık</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş     İsim  Geçti     Yıl\n",
       "0        işçi    89  11.11.2010   21      Ada   True  2010.0\n",
       "1        işçi    87  11.11.2010   24      Cem   True  2010.0\n",
       "2       memur    77  11.11.2010   25    Sibel   True  2010.0\n",
       "3     serbest    55  18.11.2011   44    Ahmet  False  2011.0\n",
       "4     serbest    70  18.11.2011   31   Mehmet   True  2011.0\n",
       "5        None    79        None   27      Ali   True     NaN\n",
       "6        None    73        None   35     Veli   True     NaN\n",
       "7   sigortacı    79        None   33     Ayşe   True     NaN\n",
       "8       işsiz    54  11.11.2010   42  Hüseyin  False  2010.0\n",
       "9        None    92        None   29    Necmi   True     NaN\n",
       "10       None    61  18.11.2011   41    Nalan  False  2011.0\n",
       "11      memur    69  18.11.2011   43    Namık  False  2011.0"
      ]
     },
     "execution_count": 450,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 451,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Meslek kolonundaki Null değerleri 'boş' değeri ile doldur\n",
    "df['Meslek'] = df['Meslek'].fillna('boş')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 452,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>İsim</th>\n",
       "      <th>Geçti</th>\n",
       "      <th>Yıl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>Ada</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>Cem</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>Sibel</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>Ahmet</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>Mehmet</td>\n",
       "      <td>True</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>boş</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>27</td>\n",
       "      <td>Ali</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>boş</td>\n",
       "      <td>73</td>\n",
       "      <td>None</td>\n",
       "      <td>35</td>\n",
       "      <td>Veli</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>None</td>\n",
       "      <td>33</td>\n",
       "      <td>Ayşe</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>Hüseyin</td>\n",
       "      <td>False</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>boş</td>\n",
       "      <td>92</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>Necmi</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>boş</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>Nalan</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>Namık</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş     İsim  Geçti     Yıl\n",
       "0        işçi    89  11.11.2010   21      Ada   True  2010.0\n",
       "1        işçi    87  11.11.2010   24      Cem   True  2010.0\n",
       "2       memur    77  11.11.2010   25    Sibel   True  2010.0\n",
       "3     serbest    55  18.11.2011   44    Ahmet  False  2011.0\n",
       "4     serbest    70  18.11.2011   31   Mehmet   True  2011.0\n",
       "5         boş    79        None   27      Ali   True     NaN\n",
       "6         boş    73        None   35     Veli   True     NaN\n",
       "7   sigortacı    79        None   33     Ayşe   True     NaN\n",
       "8       işsiz    54  11.11.2010   42  Hüseyin  False  2010.0\n",
       "9         boş    92        None   29    Necmi   True     NaN\n",
       "10        boş    61  18.11.2011   41    Nalan  False  2011.0\n",
       "11      memur    69  18.11.2011   43    Namık  False  2011.0"
      ]
     },
     "execution_count": 452,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 454,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11.11.2010\n"
     ]
    }
   ],
   "source": [
    "#Tarih kolonundaki Null değerleri Tarih kolonundaki benzersiz değerlerden ilki ile doldur\n",
    "print(df['Tarih'].unique()[0])\n",
    "df['Tarih'] = df['Tarih'].fillna(df['Tarih'].unique()[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 455,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>İsim</th>\n",
       "      <th>Geçti</th>\n",
       "      <th>Yıl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>Ada</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>Cem</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>Sibel</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>Ahmet</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>Mehmet</td>\n",
       "      <td>True</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>boş</td>\n",
       "      <td>79</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>27</td>\n",
       "      <td>Ali</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>boş</td>\n",
       "      <td>73</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>35</td>\n",
       "      <td>Veli</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>33</td>\n",
       "      <td>Ayşe</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>Hüseyin</td>\n",
       "      <td>False</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>boş</td>\n",
       "      <td>92</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>29</td>\n",
       "      <td>Necmi</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>boş</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>Nalan</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>Namık</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş     İsim  Geçti     Yıl\n",
       "0        işçi    89  11.11.2010   21      Ada   True  2010.0\n",
       "1        işçi    87  11.11.2010   24      Cem   True  2010.0\n",
       "2       memur    77  11.11.2010   25    Sibel   True  2010.0\n",
       "3     serbest    55  18.11.2011   44    Ahmet  False  2011.0\n",
       "4     serbest    70  18.11.2011   31   Mehmet   True  2011.0\n",
       "5         boş    79  11.11.2010   27      Ali   True     NaN\n",
       "6         boş    73  11.11.2010   35     Veli   True     NaN\n",
       "7   sigortacı    79  11.11.2010   33     Ayşe   True     NaN\n",
       "8       işsiz    54  11.11.2010   42  Hüseyin  False  2010.0\n",
       "9         boş    92  11.11.2010   29    Necmi   True     NaN\n",
       "10        boş    61  18.11.2011   41    Nalan  False  2011.0\n",
       "11      memur    69  18.11.2011   43    Namık  False  2011.0"
      ]
     },
     "execution_count": 455,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 456,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x120002a58>"
      ]
     },
     "execution_count": 456,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x120002d68>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#2.Aykırı Değer Tespiti\n",
    "import seaborn as sns\n",
    "sns.boxplot(x=df['Puan'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 457,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([55.6, 92. ])"
      ]
     },
     "execution_count": 457,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "P = np.percentile(df.Puan, [10, 100])\n",
    "P"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 458,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df = df[(df.Puan > P[0]) & (df.Puan < P[1])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 459,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>İsim</th>\n",
       "      <th>Geçti</th>\n",
       "      <th>Yıl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>Ada</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>Cem</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>Sibel</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>Mehmet</td>\n",
       "      <td>True</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>boş</td>\n",
       "      <td>79</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>27</td>\n",
       "      <td>Ali</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>boş</td>\n",
       "      <td>73</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>35</td>\n",
       "      <td>Veli</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>33</td>\n",
       "      <td>Ayşe</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>boş</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>Nalan</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>Namık</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş    İsim  Geçti     Yıl\n",
       "0        işçi    89  11.11.2010   21     Ada   True  2010.0\n",
       "1        işçi    87  11.11.2010   24     Cem   True  2010.0\n",
       "2       memur    77  11.11.2010   25   Sibel   True  2010.0\n",
       "4     serbest    70  18.11.2011   31  Mehmet   True  2011.0\n",
       "5         boş    79  11.11.2010   27     Ali   True     NaN\n",
       "6         boş    73  11.11.2010   35    Veli   True     NaN\n",
       "7   sigortacı    79  11.11.2010   33    Ayşe   True     NaN\n",
       "10        boş    61  18.11.2011   41   Nalan  False  2011.0\n",
       "11      memur    69  18.11.2011   43   Namık  False  2011.0"
      ]
     },
     "execution_count": 459,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 460,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>İsim</th>\n",
       "      <th>Geçti</th>\n",
       "      <th>Yıl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>Ada</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>Cem</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>Sibel</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>Ahmet</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>Mehmet</td>\n",
       "      <td>True</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>boş</td>\n",
       "      <td>79</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>27</td>\n",
       "      <td>Ali</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>boş</td>\n",
       "      <td>73</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>35</td>\n",
       "      <td>Veli</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>33</td>\n",
       "      <td>Ayşe</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>Hüseyin</td>\n",
       "      <td>False</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>boş</td>\n",
       "      <td>92</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>29</td>\n",
       "      <td>Necmi</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>boş</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>Nalan</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>Namık</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş     İsim  Geçti     Yıl\n",
       "0        işçi    89  11.11.2010   21      Ada   True  2010.0\n",
       "1        işçi    87  11.11.2010   24      Cem   True  2010.0\n",
       "2       memur    77  11.11.2010   25    Sibel   True  2010.0\n",
       "3     serbest    55  18.11.2011   44    Ahmet  False  2011.0\n",
       "4     serbest    70  18.11.2011   31   Mehmet   True  2011.0\n",
       "5         boş    79  11.11.2010   27      Ali   True     NaN\n",
       "6         boş    73  11.11.2010   35     Veli   True     NaN\n",
       "7   sigortacı    79  11.11.2010   33     Ayşe   True     NaN\n",
       "8       işsiz    54  11.11.2010   42  Hüseyin  False  2010.0\n",
       "9         boş    92  11.11.2010   29    Necmi   True     NaN\n",
       "10        boş    61  18.11.2011   41    Nalan  False  2011.0\n",
       "11      memur    69  18.11.2011   43    Namık  False  2011.0"
      ]
     },
     "execution_count": 460,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 461,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Meslek</th>\n",
       "      <th>Puan</th>\n",
       "      <th>Tarih</th>\n",
       "      <th>Yaş</th>\n",
       "      <th>İsim</th>\n",
       "      <th>Geçti</th>\n",
       "      <th>Yıl</th>\n",
       "      <th>Puan2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>işçi</td>\n",
       "      <td>89</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>21</td>\n",
       "      <td>Ada</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>0.921053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>işçi</td>\n",
       "      <td>87</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>24</td>\n",
       "      <td>Cem</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>0.868421</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>memur</td>\n",
       "      <td>77</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>25</td>\n",
       "      <td>Sibel</td>\n",
       "      <td>True</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>0.605263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>serbest</td>\n",
       "      <td>55</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>44</td>\n",
       "      <td>Ahmet</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>0.026316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>serbest</td>\n",
       "      <td>70</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>31</td>\n",
       "      <td>Mehmet</td>\n",
       "      <td>True</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>0.421053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>boş</td>\n",
       "      <td>79</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>27</td>\n",
       "      <td>Ali</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.657895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>boş</td>\n",
       "      <td>73</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>35</td>\n",
       "      <td>Veli</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sigortacı</td>\n",
       "      <td>79</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>33</td>\n",
       "      <td>Ayşe</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.657895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>işsiz</td>\n",
       "      <td>54</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>42</td>\n",
       "      <td>Hüseyin</td>\n",
       "      <td>False</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>boş</td>\n",
       "      <td>92</td>\n",
       "      <td>11.11.2010</td>\n",
       "      <td>29</td>\n",
       "      <td>Necmi</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>boş</td>\n",
       "      <td>61</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>41</td>\n",
       "      <td>Nalan</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>0.184211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>memur</td>\n",
       "      <td>69</td>\n",
       "      <td>18.11.2011</td>\n",
       "      <td>43</td>\n",
       "      <td>Namık</td>\n",
       "      <td>False</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>0.394737</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Meslek  Puan       Tarih  Yaş     İsim  Geçti     Yıl     Puan2\n",
       "0        işçi    89  11.11.2010   21      Ada   True  2010.0  0.921053\n",
       "1        işçi    87  11.11.2010   24      Cem   True  2010.0  0.868421\n",
       "2       memur    77  11.11.2010   25    Sibel   True  2010.0  0.605263\n",
       "3     serbest    55  18.11.2011   44    Ahmet  False  2011.0  0.026316\n",
       "4     serbest    70  18.11.2011   31   Mehmet   True  2011.0  0.421053\n",
       "5         boş    79  11.11.2010   27      Ali   True     NaN  0.657895\n",
       "6         boş    73  11.11.2010   35     Veli   True     NaN  0.500000\n",
       "7   sigortacı    79  11.11.2010   33     Ayşe   True     NaN  0.657895\n",
       "8       işsiz    54  11.11.2010   42  Hüseyin  False  2010.0  0.000000\n",
       "9         boş    92  11.11.2010   29    Necmi   True     NaN  1.000000\n",
       "10        boş    61  18.11.2011   41    Nalan  False  2011.0  0.184211\n",
       "11      memur    69  18.11.2011   43    Namık  False  2011.0  0.394737"
      ]
     },
     "execution_count": 461,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#3.Veri Normalleştirme\n",
    "from sklearn import preprocessing\n",
    "\n",
    "#Puan özniteliğini normalleştirmek istiyoruz\n",
    "x = df[['Puan']].values.astype(float)\n",
    "\n",
    "#Normalleştirme için MinMax normalleştirme yöntemini kullanıyoruz.\n",
    "min_max_scaler = preprocessing.MinMaxScaler()\n",
    "x_scaled = min_max_scaler.fit_transform(x)\n",
    "df['Puan2'] = pd.DataFrame(x_scaled)\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
